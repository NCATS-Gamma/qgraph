worker_processes auto;

events {
}

http {
	# Define log format without parameters
	log_format combined_no_query '$remote_addr - $remote_user [$time_local] '
		'"$uri" $status $body_bytes_sent '
		'"$http_referer" "$http_user_agent"';
	
	# filter out webpack dev logs
	map $uri $loggable {
		~*sockjs\-node           0;
		~*__webpack_dev_server__ 0;
		default                  1;
	}

	# Use internal Docker DNS Server for resolving
	# IP addresses
	resolver ${DNS_SERVER} [::1];

	# Disable caching
	if_modified_since off;

	server {
		access_log /dev/stdout combined_no_query if=$loggable;

		# Disable timeouts, some ARAs might take a while
		proxy_read_timeout 1d;
		proxy_connect_timeout 1d;
		proxy_send_timeout 1d;

		client_max_body_size 0;
		listen       80;
		server_name  localhost;

		# Return 500 errors as JSON
		include json_error.conf;

		location / {
			set	$url ${FRONTEND_URL};
			proxy_pass $url;
		}

		location ~ /api/queryDispatcher/(.*) {
			set	$url ${QUERYDISPATCHER_URL}/;
			proxy_pass $url$1$is_args$args;
		}

		location ~ /api/robokache/(.*) {
			set	$url ${ROBOKACHE_URL}/api/;
			proxy_pass $url$1$is_args$args;
		}

		location ~ /api/external/strider/(.*) {
			set	$url ${STRIDER_URL}/;
			proxy_pass $url$1$is_args$args;
		}

		location ~ /api/external/robokop/(.*) {
			set $url ${ROBOKOP_URL}/;
			proxy_pass $url$1$is_args$args;
		}

		location ~ /api/external/nodeNormalization/(.*) {
			set $url https://nodenormalization-sri.renci.org/1.1/;
			proxy_pass $url$1$is_args$args;
		}

		location ~ /api/external/nameResolver/(.*) {
			set $url https://name-resolution-sri.renci.org/;
			proxy_pass $url$1$is_args$args;
		}
	}

}
